name: Deploy Readliners App

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('app/requirement.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirement.txt
          pip install pytest pytest-cov flake8

      - name: Run flake8 for linting
        run: flake8 app --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Run tests
        run: python -m pytest app/tests/ -v --cov=app --cov-report=xml

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOSTNAME }} >> ~/.ssh/known_hosts

      - name: Test SSH connection
        run: |
          ssh -i ~/.ssh/id_rsa -o ConnectTimeout=10 ubuntu@${{ secrets.EC2_HOSTNAME }} "echo 'SSH connection successful'"

      - name: Deploy application
        env:
          HOSTNAME: ${{ secrets.EC2_HOSTNAME }}
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${HOSTNAME} '
            echo "ðŸš€ Starting deployment..."
            sudo systemctl stop readliners || echo "Service not running"

            if [ -d "/opt/readliners" ]; then
              sudo cp -r /opt/readliners /opt/readliners.backup.$(date +%Y%m%d_%H%M%S) || true
              cd /opt/readliners
              sudo git fetch origin
              sudo git reset --hard origin/main
              sudo git clean -fd
            else
              sudo git clone https://github.com/${{ github.repository }} /opt/readliners
              cd /opt/readliners
            fi

            sudo chown -R ubuntu:ubuntu /opt/readliners

            echo "ðŸ“¦ Installing Python dependencies..."
            sudo pip3 install --upgrade pip
            sudo pip3 install -r app/requirement.txt

            mkdir -p /opt/readliners/app/logs
            sudo cp /opt/readliners/systemd/readliners.service /etc/systemd/system/
            sudo systemctl daemon-reload
            sudo systemctl enable readliners
            sudo systemctl start readliners

            sleep 5
            sudo systemctl status readliners

            curl -f http://localhost:8080/api/books || exit 1
            echo "âœ… Deployment completed successfully!"
          '
