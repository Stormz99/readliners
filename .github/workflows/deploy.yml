name: Deploy Readliners Bookstore

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-3
  EC2_HOST: 15.152.35.142

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to EC2
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ env.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy application
        run: |
          ssh -i ~/.ssh/deploy_key ubuntu@${{ env.EC2_HOST }} << 'EOF'
          set -e
          
          echo "Starting deployment"
          
          sudo systemctl stop readliners || true
          sudo pkill -f "python.*app.py" || true
          
          sudo mkdir -p /opt/readliners
          sudo chown -R ubuntu:ubuntu /opt/readliners
          
          if [ -d "/opt/readliners/.git" ]; then
            cd /opt/readliners
            git fetch origin main
            git reset --hard origin/main
            git clean -fd
          else
            rm -rf /opt/readliners/*
            git clone https://github.com/Stormz99/readliners.git /tmp/readliners
            cp -r /tmp/readliners/* /opt/readliners/
            rm -rf /tmp/readliners
          fi
          
          cd /opt/readliners
          sudo chown -R ubuntu:ubuntu /opt/readliners
          
          sudo apt-get update -y
          sudo apt-get install -y python3 python3-pip python3-venv
          
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          
          if [ -f "app/requirements.txt" ]; then
            cd app
            ../venv/bin/pip install -r requirements.txt
          else
            pip install Flask Werkzeug Jinja2
          fi
          
          sudo tee /etc/systemd/system/readliners.service > /dev/null << 'SERVICE'
          [Unit]
          Description=Readliners Bookstore Flask Application
          After=network.target
          
          [Service]
          Type=simple
          User=ubuntu
          Group=ubuntu
          WorkingDirectory=/opt/readliners/app
          Environment=PATH=/opt/readliners/venv/bin:/usr/bin:/bin
          ExecStart=/opt/readliners/venv/bin/python app.py
          Restart=always
          RestartSec=3
          
          [Install]
          WantedBy=multi-user.target
          SERVICE
          
          sudo systemctl daemon-reload
          sudo systemctl enable readliners
          sudo systemctl start readliners
          
          sleep 10
          sudo systemctl status readliners --no-pager
          
          echo "Deployment completed"
          EOF

      - name: Verify deployment
        run: |
          sleep 15
          response=$(curl -s -o /dev/null -w "%{http_code}" http://${{ env.EC2_HOST }}:8080/)
          if [ "$response" = "200" ]; then
            echo "Application deployed successfully"
            echo "URL: http://${{ env.EC2_HOST }}:8080"
          else
            echo "Deployment verification failed"
            exit 1
          fi

      - name: Cleanup
        if: always()
        run: rm -f ~/.ssh/deploy_key