name: Deploy Readliners Bookstore

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ap-northeast-3

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test Application
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('app/requirement.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirement.txt
        pip install pytest pytest-cov flake8
    
    - name: Lint with flake8
      run: |
        flake8 app --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 app --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run unit tests
      run: python -m pytest app/tests/ -v --cov=app --cov-report=xml
    
    - name: Test Flask app startup
      run: |
        timeout 10s python app/app.py &
        sleep 5
        curl -f http://localhost:8080/api/books || exit 1
        pkill -f "python app.py" || true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    name: Deploy to EC2
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup SSH key
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > /tmp/ssh_key
        chmod 600 /tmp/ssh_key
        ssh-keyscan -H ${{ secrets.EC2_HOSTNAME }} >> ~/.ssh/known_hosts
    
    - name: Test SSH connection
      run: |
        ssh -i /tmp/ssh_key -o ConnectTimeout=10 ubuntu@${{ secrets.EC2_HOSTNAME }} "echo 'SSH connection successful'"
    
    - name: Deploy application to EC2
      env:
        HOSTNAME: ${{ secrets.EC2_HOSTNAME }}
      run: |
        ssh -i /tmp/ssh_key ubuntu@${HOSTNAME} '
          echo "ðŸš€ Starting deployment..."
          sudo systemctl stop readliners || echo "Service not running"
          
          if [ -d "/opt/readliners" ]; then
            sudo cp -r /opt/readliners /opt/readliners.backup.$(date +%Y%m%d_%H%M%S) || true
          fi
          
          if [ -d "/opt/readliners" ]; then
            cd /opt/readliners
            sudo git fetch origin
            sudo git reset --hard origin/main
            sudo git clean -fd
          else
            sudo git clone https://github.com/${{ github.repository }} /opt/readliners
            cd /opt/readliners
          fi
          
          sudo chown -R ubuntu:ubuntu /opt/readliners
          
          echo "ðŸ“¦ Installing Python dependencies..."
          sudo pip3 install --upgrade pip
          sudo pip3 install -r app/requirement.txt
          
          mkdir -p /opt/readliners/app/logs
          sudo cp /opt/readliners/systemd/readliners.service /etc/systemd/system/
          sudo systemctl daemon-reload
          sudo systemctl enable readliners
          sudo systemctl start readliners
          
          sleep 5
          sudo systemctl status readliners
          
          curl -f http://localhost:8080/api/books || exit 1
          echo "âœ… Deployment completed successfully!"
        '
    
    - name: Clean up SSH key
      if: always()
      run: rm -f /tmp/ssh_key
